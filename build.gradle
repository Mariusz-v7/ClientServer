group 'pl.mrugames.commons'
version '2.0.0'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'

sourceCompatibility = 1.9

ext.moduleName = "pl.mrugames.client_server"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    compile group: 'io.dropwizard.metrics', name: 'metrics-core', version: '4.0.0-alpha3'
    compile group: 'io.dropwizard.metrics', name: 'metrics-healthchecks', version: '4.0.0-alpha3'

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.2'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.12.0'
}

ext.moduleName = 'pl.mrugames.client_server'

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

idea {
    module {
        testSourceDirs += file('src/test/integration')
    }
}

sourceSets {
    test {
        java {
            srcDir 'src/test/integration'
        }
    }
}

task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

task telnetExampleJar(type: Jar) {
    baseName = project.name + '-telnet-example'

    from configurations.compile.collect {
        it.isDirectory() ? it : zipTree(it)
    }

    from sourceSets.test.output

    manifest {
        attributes 'Main-Class': 'pl.mrugames.commons.client_server.telnet_example.Main'
    }

    with jar
}

task webSocketExampleJar(type: Jar) {
    baseName = project.name + '-websocket-example'

    from configurations.compile.collect {
        it.isDirectory() ? it : zipTree(it)
    }

    from sourceSets.test.output

    manifest {
        attributes 'Main-Class': 'pl.mrugames.commons.client_server.websocket_server.Main'
    }

    with jar
}

task clientExampleJar(type: Jar) {
    baseName = project.name + '-client-example'

    from configurations.compile.collect {
        it.isDirectory() ? it : zipTree(it)
    }

    from sourceSets.test.output

    manifest {
        attributes 'Main-Class': 'pl.mrugames.commons.client_example.Main'
    }
    with jar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}
